#!/bin/bash

# {{ mongodb_daemon_name }} - Startup script for {{ mongodb_daemon_name }}

# chkconfig: 35 85 15
# description: Mongo is a scalable, document-oriented database.
# processname: {{ mongodb_daemon_name }}
# config: {{ mongodb_conf_path }}
# pidfile: {{ mongodb_pid_path }}

# things from mongod.conf get there by mongod reading it
export LC_ALL="C"

# NOTE: if you change any OPTIONS here, you get what you pay for:
# this script assumes all options are in the config file.
CONFIGFILE="{{ mongodb_conf_path }}"
OPTIONS=" -f $CONFIGFILE"

# FIXME: 1.9.x has a --shutdown flag that parses the config file and
# shuts down the correct running pid, but that's unavailable in 1.8
# for now.  This can go away when this script stops supporting 1.8.
DBPATH=`awk -F= '/^dbpath=/{print $2}' "$CONFIGFILE"`
PIDFILE=`awk -F= '/^dbpath\s=\s/{print $2}' "$CONFIGFILE"`
{{ mongodb_daemon_name }}=${MONGOD-/usr/bin/{{ mongodb_daemon_name }}}

MONGO_USER={{ mongodb_system_user }}
MONGO_GROUP={{ mongodb_system_group }}

# Handle NUMA access to CPUs (SERVER-3574)
# This verifies the existence of numactl as well as testing that the command works
NUMACTL_ARGS="--interleave=all"
if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
then
    NUMACTL="numactl $NUMACTL_ARGS"
else
    NUMACTL=""
fi

start()
{
  echo -n $"Starting {{ mongodb_daemon_name }}: "
  daemon --user "$MONGO_USER" $NUMACTL ${{ mongodb_daemon_name }} $OPTIONS
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch /var/lock/subsys/{{ mongodb_daemon_name }}
}

stop()
{
  echo -n $"Stopping {{ mongodb_daemon_name }}: "
  killproc -p "$PIDFILE" -d 300 /usr/bin/{{ mongodb_daemon_name }}
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/{{ mongodb_daemon_name }}
}

restart () {
	stop
	start
}

ulimit -n 12000
RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f /var/lock/subsys/{{ mongodb_daemon_name }} ] && restart || :
    ;;
  status)
    status ${{ mongodb_daemon_name }}
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL