---
- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include installation tasks
  include: "setup-{{ ansible_os_family }}.yml"

- name: Include configuration.yml
  include: configure.yml

- name: Check if admin user already exists
  command: >
    mongo --quiet -u {{ mongodb_user_admin_name }} -p {{ mongodb_user_admin_password }} --port {{ mongodb_net_port }} --eval 'db.version()' admin
  register: mongodb_user_admin_check
  changed_when: false
  check_mode: false
  ignore_errors: true
  when: mongodb_security_authorization == 'enabled'
  no_log: true

- debug: var=mongodb_user_admin_check

- name: Ajout d'un compte admin
  mongodb_user:
    database: admin
    name: "{{ mongo_admin_user }}"
    password: "{{ mongo_admin_pass }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ mongo_admin_roles }}"
    state: present
    login_port: "{{ mongodb_net_port }}"
  when: ( mongodb_security_authorization == 'enabled'
          and mongodb_user_admin_check.rc != 0 )

- name: Create normal users and databases
  mongodb_user:
    database: "{{ item.database }}"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    update_password: "{{ mongodb_user_update_password }}"
    roles: "{{ item.roles }}"
    login_user: "{{ mongodb_user_admin_name }}"
    login_password: "{{ mongodb_user_admin_password }}"
    login_port: "{{ mongodb_net_port }}"
    login_host: "{{ mongodb_login_host|default('localhost') }}"
  with_items:
    - "{{ mongodb_users | default([]) }}"
  when: mongodb_security_authorization == 'enabled'
  no_log: true
